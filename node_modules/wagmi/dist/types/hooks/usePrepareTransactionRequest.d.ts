import { type Config, type PrepareTransactionRequestErrorType, type ResolvedRegister } from '@wagmi/core';
import { type PrepareTransactionRequestData, type PrepareTransactionRequestOptions, type PrepareTransactionRequestQueryKey } from '@wagmi/core/query';
import type { PrepareTransactionRequestQueryFnData } from '@wagmi/core/query';
import { type PrepareTransactionRequestParameterType as viem_PrepareTransactionRequestParameterType } from 'viem';
import { type ConfigParameter, type QueryParameter } from '../types/properties.js';
import { type UseQueryReturnType } from '../utils/query.js';
export type UsePrepareTransactionRequestParameters<parameterType extends viem_PrepareTransactionRequestParameterType = viem_PrepareTransactionRequestParameterType, config extends Config = Config, chainId extends config['chains'][number]['id'] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>> = PrepareTransactionRequestOptions<parameterType, config, chainId> & ConfigParameter<config> & QueryParameter<PrepareTransactionRequestQueryFnData<parameterType, config, chainId>, PrepareTransactionRequestErrorType, selectData, PrepareTransactionRequestQueryKey<parameterType, config, chainId>>;
export type UsePrepareTransactionRequestReturnType<parameterType extends viem_PrepareTransactionRequestParameterType = viem_PrepareTransactionRequestParameterType, config extends Config = Config, chainId extends config['chains'][number]['id'] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>> = UseQueryReturnType<selectData, PrepareTransactionRequestErrorType>;
/** https://wagmi.sh/react/api/hooks/usePrepareTransactionRequest */
export declare function usePrepareTransactionRequest<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config = ResolvedRegister['config'], chainId extends config['chains'][number]['id'] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>>(parameters?: UsePrepareTransactionRequestParameters<parameterType, config, chainId, selectData>): UsePrepareTransactionRequestReturnType<parameterType, config, chainId, selectData>;
//# sourceMappingURL=usePrepareTransactionRequest.d.ts.map